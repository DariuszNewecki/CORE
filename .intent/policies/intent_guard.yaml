# .intent/policies/intent_guard.yaml
# This file contains low-level, machine-enforceable governance rules.
# More complex security policies are defined in safety_policies.yaml.
# Definitions for enforcement levels are now in enforcement_model.yaml.

rules:
  - id: no_direct_intent_writes
    description: >
      Direct writes into the .intent/ directory are forbidden. All constitutional
      changes must be submitted via the proposals mechanism.
    enforcement: hard
    applies_to:
      paths:
        - ".intent/"
    exclude:
      paths:
        - ".intent/proposals/"
        - ".intent/knowledge/knowledge_graph.json" # Allow KG to be updated by its builder
        - ".intent/knowledge/knowledge_graph.json.lock" # Allow lock file for atomic writes

  - id: max_nesting_level
    description: "Code logic should not be nested more than 4 levels deep to maintain clarity."
    enforcement: soft # This is a guideline, not a hard blocker.
    applies_to:
      patterns: ["src/**/*.py"]

  - id: no_undocumented_change
    description: >
      CORE must not modify or create any file that is not declared in `project_manifest.yaml`
      or traceable to a declared capability therein.
    enforcement: hard

  - id: must_match_intent
    description: >
      All changes must be traceable to a declared high-level intent in the mission or policies.
    enforcement: soft

  - id: limit_rewrite_cycles
    description: >
      CORE may not rewrite the same file more than once per execution cycle
      without explicit validation or feedback input.
    enforcement: hard

  - id: require_tests_for_capabilities
    description: >
      All capabilities declared in `project_manifest.yaml` must have at least one corresponding test in /tests.
    enforcement: soft

  - id: enforce_intent_bundle_usage
    description: >
      Any capability marked with `requires_intent_bundle: true` must be executed through an IntentBundle flow.
    enforcement: hard