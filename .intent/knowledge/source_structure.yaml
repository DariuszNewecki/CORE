# .intent/knowledge/source_structure.yaml
# Purpose: Single source of truth for domains, their folders, and import allow-lists.
# This file is consumed by guards and tooling. It aligns with File 2 (intent_guard.yaml).

version: 1
about: "Domain map + allowed imports. Deny-by-default outside what’s listed here."

# ---- DRY anchors (not parsed as domains; just reusable lists) ----
anchors:
  stdlib_common: &stdlib_common
    - typing
    - types
    - pathlib
    - logging
    - re
    - dataclasses
    - json
    - os
    - sys
    - uuid
    - itertools
    - functools
    - datetime

  third_party_core: &third_party_core
    - fastapi
    - pydantic
    - httpx
    - uvicorn
    - yaml
    - jsonschema
    - rich

  third_party_cli: &third_party_cli
    - typer
    - black

# ---- Domains ----
domains:
  - domain: shared
    path: src/shared
    enabled: true
    description: "Cross-cutting types, constants, helpers. NO runtime side-effects."
    allowed_imports:
      - shared
      - *stdlib_common
      - pydantic        # shared models/helpers can use pydantic
    forbidden_imports:
      - core
      - agents
      - system
      - data

  - domain: core
    path: src/core
    enabled: true
    description: "Business logic and services. Depends on shared only (DIP)."
    allowed_imports:
      - core
      - shared
      - *stdlib_common
      - *third_party_core
    forbidden_imports:
      - agents
      - system
      - data            # DIP: core does NOT import data; data implements core interfaces

  - domain: agents
    path: src/agents
    enabled: true
    description: "Agent behaviors. May call core; never system or data."
    allowed_imports:
      - agents
      - core
      - shared
      - *stdlib_common
      - *third_party_core
      - subprocess      # gated by policy; only for scaffolding capability
    forbidden_imports:
      - system
      - data

  - domain: system
    path: src/system
    enabled: true
    description: "Orchestration/CLI/infra wiring. One-way bridge to agents."
    allowed_imports:
      - system
      - core
      - agents          # explicit bridge (system → agents)
      - shared
      - *stdlib_common
      - *third_party_core
      - *third_party_cli
    forbidden_imports:
      - data            # wiring to data happens via core abstractions

  - domain: data
    path: src/data
    enabled: false      # toggle to true when the package exists and is included
    description: "Implementations of core ports/adapters (DB, external systems)."
    allowed_imports:
      - data
      - shared
      - core            # implements interfaces defined in core (DIP)
      - *stdlib_common
      # Add DB libs here when you actually use them (example):
      # - sqlalchemy
      # - asyncpg
    forbidden_imports:
      - agents
      - system

# Optional: global notes for tools (non-enforced hints)
notes:
  - "Default stance is deny; keep lists minimal. Add imports only when needed."
  - "Requests is intentionally NOT allowed; use httpx."
  - "If you enable 'data', ensure your packaging includes src/data or flip enabled:true later."
