# .intent/knowledge/capability_tags.yaml
#
# This is the canonical dictionary of all valid capability tags in the CORE system.
# The ConstitutionalAuditor verifies that any # CAPABILITY tag used in the source code
# is defined in this file.

tags:
  # --- System & Governance ---
  - name: introspection
    description: "Enables self-analysis of the system's own structure, code, or intent."
  - name: alignment_checking
    description: "Verifies that system components or actions align with constitutional principles."
  - name: manifest_updating
    description: "Modifies or generates knowledge artifacts like the knowledge_graph.json."
  - name: self_review
    description: "Enables the system to analyze its own code for quality, correctness, or improvements."
  - name: intent_guarding
    description: "Enforces constitutional rules at runtime, preventing forbidden actions."
  - name: change_safety_enforcement
    description: "Implements safety checks or operations related to modifying files or state (e.g., Git)."
  - name: system_logging
    description: "Provides system-wide logging capabilities."

  # --- Code Validation & Quality ---
  - name: semantic_validation
    description: "Performs semantic analysis on code, beyond simple syntax checks."
  - name: syntax_validation
    description: "Performs syntax validation on code or configuration files."
  - name: code_quality_analysis
    description: "Runs a pipeline of quality checks (e.g., formatting, linting)."
  - name: test_execution
    description: "Executes automated tests (e.g., pytest) and reports results."
  - name: yaml_loading
    description: "Provides a safe, standardized way to load and parse YAML files."

  # --- LLM & Agent Orchestration ---
  - name: llm_orchestration
    description: "Manages the flow of requests and plans to one or more LLMs."
  - name: prompt_interpretation
    description: "Processes and enriches prompts with context before sending them to an LLM."
  - name: code_generation
    description: "Specifically handles the generation of new source code."
  - name: documentation
    description: "Specifically handles the generation of documentation (docstrings, comments, etc.)."
  - name: self_correction
    description: "Attempts to automatically fix errors based on validation or test feedback."

  # --- V1.0 Architecture & Governance Capabilities ---
  - name: cognitive_service.management
    description: "Manages the lifecycle and provision of role-based LLM clients."
  - name: config.load
    description: "Loads a JSON or YAML file with consistent error handling and logging."
  - name: governance.cli.should_fail
    description: "Determines if the CLI should exit with an error based on a drift report."
  - name: governance.cli.load_yaml
    description: "Loads a YAML file specifically for a governance CLI operation."
  - name: governance.cli.save_yaml
    description: "Saves a YAML file with stable ordering for governance operations."
  - name: governance.cli.generate_token
    description: "Generates a deterministic, content-bound approval token for a proposal."
  - name: governance.cli.load_key
    description: "Loads an operator's private key from the secure key store."
  - name: governance.cli.archive_plan
    description: "Archives a rollback plan for an approved proposal."

  # --- Constitutional Auditor Checks (discoverable micro-capabilities) ---
  - name: audit.check.required_files
    description: "Auditor check: Verifies the existence of critical .intent files."
  - name: audit.check.syntax
    description: "Auditor check: Validates the syntax of all .intent YAML/JSON files."
  - name: audit.check.project_manifest
    description: "Auditor check: Validates the integrity of project_manifest.yaml."
  - name: audit.check.capability_coverage
    description: "Auditor check: Ensures all required capabilities are implemented."
  - name: audit.check.capability_definitions
    description: "Auditor check: Ensures all implemented capabilities are defined in this file."
  - name: audit.check.knowledge_graph_schema
    description: "Auditor check: Validates all knowledge graph symbols against the schema."
  - name: audit.check.domain_integrity
    description: "Auditor check: Checks for domain mismatches and illegal imports."
  - name: audit.check.docstrings
    description: "Auditor check: Finds symbols missing docstrings or having generic intents."
  - name: audit.check.dead_code
    description: "Auditor check: Detects unreferenced public symbols."
  - name: audit.check.orphaned_intent_files
    description: "Auditor check: Finds .intent files that are not referenced in meta.yaml."
  - name: audit.check.environment
    description: "Auditor check: Verifies that required environment variables are set."
  - name: audit.check.proposals_schema
    description: "Auditor check: Validates each proposal against its JSON schema."
  - name: audit.check.proposals_drift
    description: "Auditor check: Detects if a proposal's content has changed after being signed."
  - name: audit.check.proposals_list
    description: "Auditor check: Lists all pending proposals for visibility during an audit."
  - name: audit.check.duplication
    description: "Auditor check: Finds structurally identical code, violating the 'dry_by_design' principle."
  - name: audit.check.content_drift
    description: "Auditor check: Detects duplicated or inconsistent content across designated data files."
  - name: audit.check.codebase_health
    description: "Auditor check: Measures code complexity and atomicity against defined policies."
  - name: audit.check.secrets
    description: "Auditor check: Scans for hardcoded secrets like API keys or passwords."
  - name: scaffold_project
    description: "Generates a complete, multi-file project structure from a high-level goal, including a starter constitution."

  # --- Planned or Placeholder Capabilities ---
  - name: add_missing_docstrings
    description: "A planned capability to automatically add docstrings to undocumented code."
  - name: refactor_to_shared_function
    description: "A planned capability to consolidate duplicated logic into a single shared function."

  # --- Documentation & Clarity ---
  - name: docs.clarity_audit
    description: "Bundles all human-facing documentation (.md files) for a conceptual clarity review by an LLM."

  # --- Constitutional Peer Review ---
  - name: export_constitution
    description: "Packages the full .intent/ directory into a single bundle for external analysis."
  - name: constitutional_peer_review
    description: "Orchestrates sending the constitutional bundle to an external LLM for critique and suggestions."
  - name: autonomous_development
    description: "Orchestrates the full goal -> plan -> execute cycle from a single user command."