# .intent/knowledge/capability_tags.yaml
# This is the canonical dictionary of all valid capability tags in the CORE system.
# The ConstitutionalAuditor verifies that any # CAPABILITY tag used in the source code
# is defined in this file.
# This version has been consolidated and refactored based on architectural review.

tags:
  # --- System & Governance ---
  - name: introspection
    description: "Enables self-analysis of the system's own structure, code, or intent."
    status: active
    owner: system
  - name: alignment_checking
    description: "Verifies that system components or actions align with constitutional principles."
    status: active
    owner: system
  - name: manifest_updating
    description: "Modifies or generates knowledge artifacts like the knowledge_graph.json."
    status: active
    owner: system
  - name: self_review
    description: "Enables the system to analyze its own code for quality, correctness, or improvements."
    status: active
    owner: system
  - name: intent_guarding
    description: "Enforces constitutional rules at runtime, preventing forbidden actions."
    status: active
    owner: system
  - name: change_safety_enforcement
    description: "Implements safety checks or operations related to modifying files or state (e.g., Git)."
    status: active
    owner: system
  - name: system_logging
    description: "Provides system-wide logging capabilities."
    status: active
    owner: system
  - name: system.git.initialize
    description: "Initializes the GitService and validates the repository path."
    status: active
    owner: system
  - name: system.path.get_repo_root
    description: "Finds and returns the absolute path to the repository root."
    status: active
    owner: system
  - name: system.status.get
    description: "Retrieves the system's operational status."
    status: active
    owner: system

  # --- Code Validation & Quality ---
  - name: semantic_validation
    description: "Performs semantic analysis on code, beyond simple syntax checks."
    status: active
    owner: validation
  - name: syntax_validation
    description: "Performs syntax validation on code or configuration files."
    status: active
    owner: validation
  - name: code_quality_analysis
    description: "Runs a pipeline of quality checks (e.g., formatting, linting)."
    status: active
    owner: validation
  - name: test_execution
    description: "Executes automated tests (e.g., pytest) and reports results."
    status: active
    owner: validation
  - name: yaml_loading
    description: "Provides a safe, standardized way to load and parse YAML files."
    status: active
    owner: shared
  - name: code.peer_review
    description: "Orchestrates sending a code file to an external LLM for critique and suggestions for improvement."
    status: active
    owner: code
  - name: refactor.complexity_outlier
    description: "Identifies and refactors large, complex files into smaller, more focused modules to improve separation of concerns."
    status: active
    owner: refactor
  - name: classify_files_by_extension_for_validation_routing
    description: "Classifies a file's type based on its extension to route it to the correct validation pipeline."
    status: active
    owner: validation
  - name: determine_overall_validation_status_from_violations
    description: "Determines the final validation status (clean/dirty) based on the severity of reported violations."
    status: active
    owner: validation
  - name: route_files_to_appropriate_validation_pipeline
    description: "Acts as the main entry point for validation, routing files to specialized validators based on type."
    status: active
    owner: validation
  - name: standardize_validation_results_across_file_types
    description: "Ensures that the output of all validation pipelines follows a consistent, predictable data structure."
    status: active
    owner: validation
  - name: validate_python_code_with_comprehensive_pipeline
    description: "Executes a multi-stage validation process for Python code, including formatting, linting, and policy checks."
    status: active
    owner: validation
  - name: validate_yaml_syntax_and_structure
    description: "Executes a validation process for YAML files to ensure they are well-formed."
    status: active
    owner: validation
  - name: code.format.python
    description: "Formats Python code using the Black formatter."
    status: active
    owner: code
  - name: code.lint.fix_with_ruff
    description: "Fixes and lints Python code using the Ruff linter."
    status: active
    owner: code
  - name: code.import.scan_file
    description: "Scans a Python file to extract all of its top-level import statements."
    status: active
    owner: code
  - name: code.parsing.extract_write_blocks
    description: "Parses a string for one or more [[write:file_path]] blocks."
    status: active
    owner: code
  - name: code.refactor.replace_symbol
    description: "Replaces a function or class in a source file with new code."
    status: active
    owner: code
  - name: code.ast.extract_docstring
    description: "Extracts the docstring from an AST node."
    status: active
    owner: code
  - name: code.ast.visit_call
    description: "AST visitor method for handling function call nodes."
    status: active
    owner: code
  - name: shared.parsing.extract_json_response
    description: "Extracts a JSON object or array from raw text, handling markdown blocks."
    status: active
    owner: shared

  # --- LLM & Agent Orchestration ---
  - name: llm_orchestration
    description: "Manages the flow of requests and plans to one or more LLMs."
    status: active
    owner: llm
  - name: llm_orchestration.client_provisioning
    description: "Gets a configured LLM client for a specific cognitive role."
    status: active
    owner: llm
  - name: llm.client.initialize
    description: "Handles the initialization and configuration of an LLM client."
    status: active
    owner: llm
  - name: llm.client.payload_formatting
    description: "Prepares the API-specific JSON payload for an LLM request."
    status: active
    owner: llm
  - name: llm.client.response_parsing
    description: "Parses the API-specific JSON response from an LLM."
    status: active
    owner: llm
  - name: llm.client.sync_request
    description: "Executes a synchronous (blocking) request to an LLM."
    status: active
    owner: llm
  - name: llm.client.async_request
    description: "Executes an asynchronous (non-blocking) request to an LLM."
    status: active
    owner: llm
  - name: prompt_interpretation
    description: "Processes and enriches prompts with context before sending them to an LLM."
    status: active
    owner: prompt
  - name: code_generation
    description: "Specifically handles the generation of new source code."
    status: active
    owner: agent
  - name: documentation
    description: "Specifically handles the generation of documentation (docstrings, comments, etc.)."
    status: active
    owner: agent
  - name: self_correction
    description: "Attempts to automatically fix errors based on validation or test feedback."
    status: active
    owner: agent
  - name: planning
    description: "Breaks down high-level intents into executable steps."
    status: active
    owner: agent
  - name: reconnaissance
    description: "Analyzes a goal and queries the knowledge graph to generate a surgical context report for other agents."
    status: active
    owner: agent
  - name: decomposition
    description: "Structures problems into coherent sub-problems and tasks."
    status: active
    owner: agent
  - name: natural_language_understanding
    description: "Understands and interprets free-text instructions and context."
    status: active
    owner: agent
  - name: conversational_interface
    description: "Provides a direct, natural language interface for the user to interact with the system."
    status: active
    owner: agent
  - name: security_review
    description: "Performs targeted security analysis according to policy."
    status: active
    owner: agent
  - name: refactoring
    description: "Improves code structure without changing behavior."
    status: active
    owner: agent
  - name: autonomous_development
    description: "Orchestrates the full goal -> plan -> execute cycle from a single user command."
    status: active
    owner: agent
  - name: agent.capability_tagger
    description: "An agent that finds unassigned capabilities and suggests names."
    status: active
    owner: agent
  - name: fix.unassigned_tags
    description: "A CLI command to run the Capability Tagger Agent."
    status: active
    owner: system
  - name: shared.throttled_parallel_processing
    description: "A reusable, throttled parallel processor for running async tasks concurrently."
    status: active
    owner: shared
  - name: agent.capability_tagger.suggest_and_apply
    description: "Suggests and applies capability tags to unassigned symbols."
    status: active
    owner: agent
  - name: agent.code_editor.edit
    description: "Executes a code editing task."
    status: active
    owner: agent
  - name: agent.code_generation.generate_proposal_file
    description: "Generates the content for a constitutional proposal file."
    status: active
    owner: agent
  - name: agent.code_generation.generate_task
    description: "Generates code for a single development task."
    status: active
    owner: agent
  - name: agent.execution.execute_plan
    description: "Executes a fully populated and validated development plan."
    status: active
    owner: agent
  - name: agent.intent.translate
    description: "Translates a natural language goal into a structured, executable goal."
    status: active
    owner: agent
  - name: agent.llm.resource_selection
    description: "Selects the optimal LLM resource for a given task."
    status: active
    owner: agent
  - name: agent.llm.resource_score
    description: "Calculates a weighted score for an LLM resource based on policy."
    status: active
    owner: agent
  - name: agent.planner.load_available_actions
    description: "Loads the list of available agent actions from the constitution."
    status: active
    owner: agent
  - name: agent.planning.build_prompt
    description: "Builds the final prompt for the Planner agent."
    status: active
    owner: agent
  - name: agent.planning.log_summary
    description: "Logs a human-readable summary of an execution plan."
    status: active
    owner: agent
  - name: agent.planning.validate_task_parameters
    description: "Validates that a task has all required parameters for its action."
    status: active
    owner: agent
  - name: agent.proposal.create
    description: "Creates a formal constitutional proposal file."
    status: active
    owner: agent
  - name: agent.reconnaissance.find_symbol_data
    description: "Finds the data entry for a specific symbol in the knowledge graph."
    status: active
    owner: agent
  - name: agent.reconnaissance.query_knowledge_graph
    description: "Queries the knowledge graph to build context for a task."
    status: active
    owner: agent
  - name: agent.code_editor.get_symbol_lines
    description: "Finds the start and end line numbers of a symbol in a file."
    status: active
    owner: agent
  - name: agent.development_cycle.execute
    description: "Runs the full autonomous development cycle for a given goal."
    status: active
    owner: agent
  - name: agent.execution.progress_tracking
    description: "Represents the progress of a plan's execution."
    status: active
    owner: agent
  - name: agent.execution.rollback
    description: "Handles rollback of changes on execution failure."
    status: active
    owner: agent
  - name: agent.execution.task_model
    description: "Data model for a single, executable step in a plan."
    status: active
    owner: agent
  - name: agent.execution_progress.calculate_percentage
    description: "Calculates the completion percentage of a plan."
    status: active
    owner: agent
  - name: agent.plan.execute
    description: "Executes an entire development plan, one task at a time."
    status: active
    owner: agent
  - name: agent.plan.execute_task
    description: "Dispatcher that executes a single task from a plan."
    status: active
    owner: agent
  - name: agent.plan.execution_context
    description: "Context manager for safe plan execution with rollback."
    status: active
    owner: agent
  - name: agent.plan.error
    description: "Custom exception for failures during plan execution."
    status: active
    owner: agent
  - name: agent.plan_executor.add_capability_tag
    description: "Executes the surgical 'add_capability_tag' action."
    status: active
    owner: agent
  - name: agent.plan_executor.create_file
    description: "Executes the 'create_file' action."
    status: active
    owner: agent
  - name: agent.plan_executor.delete_file
    description: "Executes the 'delete_file' action."
    status: active
    owner: agent
  - name: agent.planner.config
    description: "Configuration settings for the PlannerAgent's behavior."
    status: active
    owner: agent
  - name: agent.prompt.load_template
    description: "Loads a prompt template from the constitution."
    status: active
    owner: agent
  - name: agent.symbol.locate
    description: "A dedicated class for finding symbols in code files."
    status: active
    owner: agent
  - name: agent.symbol.locate_line
    description: "Finds the line number of a symbol definition in a file."
    status: active
    owner: agent
  - name: agent.task.execute_with_timeout
    description: "Executes a task with a timeout protection."
    status: active
    owner: agent
  - name: agent.task.params_model
    description: "Data model for the parameters of a single task."
    status: active
    owner: agent
  - name: agent.task.status_enum
    description: "Enumeration of possible states for an ExecutionTask."
    status: active
    owner: agent
  - name: alignment.request.schema
    description: "Pydantic schema for an alignment request."
    status: active
    owner: alignment
  - name: alignment_checking.goal_validation
    description: "Checks a goal against the mission and blocklist."
    status: active
    owner: alignment
  - name: alignment_checking.guard_goal
    description: "API endpoint to evaluate a goal against the constitution."
    status: active
    owner: alignment
  - name: audit.check.architecture_integrity
    description: "Container for architectural integrity checks."
    status: active
    owner: audit
  - name: audit.check.capability_drift
    description: "Computes drift between manifest and code."
    status: active
    owner: audit
  - name: audit.check.capability_tags
    description: "Validates capability tags in a file."
    status: active
    owner: audit
  - name: audit.check.dangerous_patterns
    description: "Scans the AST for forbidden calls and imports."
    status: active
    owner: audit
  - name: audit.check.dev_fastpath
    description: "A placeholder for the dev_fastpath constitutional check."
    status: active
    owner: audit
  - name: audit.check.discovery
    description: "Discovers and instantiates constitutional audit checks."
    status: active
    owner: audit
  - name: audit.check.environment_configuration
    description: "Container for environment and runtime configuration checks."
    status: active
    owner: audit
  - name: audit.check.file_integrity
    description: "Container for file-based constitutional checks."
    status: active
    owner: audit
  - name: audit.check.intent_schema
    description: "Validates policy YAMLs against JSON Schemas."
    status: active
    owner: audit
  - name: audit.check.logical_lines_of_code
    description: "Calculates the Logical Lines of Code (LLOC)."
    status: active
    owner: audit
  - name: audit.check.manifest_entry
    description: "Validates a single manifest entry against a schema."
    status: active
    owner: audit
  - name: audit.check.proposal_signature_drift
    description: "Detects content drift in signed proposals."
    status: active
    owner: audit
  - name: audit.check.proposals
    description: "Container for proposal-related constitutional checks."
    status: active
    owner: audit
  - name: audit.check.security
    description: "Container for security-related constitutional checks."
    status: active
    owner: audit
  - name: audit.check.semantics
    description: "Runs all policy-aware semantic checks on Python code."
    status: active
    owner: audit
  - name: audit.check.structure
    description: "Container for structural constitutional checks."
    status: active
    owner: audit
  - name: audit.check.todo_comments
    description: "Scans source code for TODO/FIXME comments."
    status: active
    owner: audit
  - name: audit.execute.full
    description: "Runs all discovered validation checks and returns overall status."
    status: active
    owner: audit
  - name: audit.report.is_clean
    description: "Determines if an audit report contains any errors."
    status: active
    owner: audit
  - name: audit.report.final_status
    description: "Prints the final audit summary to the console."
    status: active
    owner: audit

  # --- Architecture & Governance Capabilities ---
  - name: config.load
    description: "Loads a JSON or YAML file with consistent error handling and logging."
    status: active
    owner: config
  - name: governance.cli.merge_review_contexts
    description: "Merges two ReviewContext objects."
    status: active
    owner: governance
  - name: governance.risk_gates.enforce
    description: "Enforces risk-tier gates defined in the scoring policy."
    status: active
    owner: governance
  - name: system.schema.load
    description: "Loads a JSON schema from the constitutional schema directory."
    status: active
    owner: system
  - name: system.manifest.aggregate
    description: "Aggregates all domain-specific manifests into a unified project manifest."
    status: active
    owner: system
  - name: system.constitution.discover_files
    description: "Discovers all declared constitutional file paths from meta.yaml."
    status: active
    owner: system
  - name: system.cli.register_command
    description: "Registers a command with the main Typer CLI application."
    status: active
    owner: system
  - name: core.application.lifespan
    description: "FastAPI lifespan handler for startup and shutdown logic."
    status: active
    owner: core
  - name: core.ast.attribute_name_builder
    description: "Recursively builds the full name of an attribute call from an AST node."
    status: deprecated
    owner: core
    replaced_by: tooling.ast.build_attribute_name
  - name: core.capability.list
    description: "Returns a list of all capabilities the system has declared."
    status: active
    owner: core
  - name: core.client.parse_response
    description: "Parses the API response to extract content based on API type."
    status: active
    owner: core
  - name: core.client.prepare_payload
    description: "Prepares the request payload based on the API type."
    status: active
    owner: core
  - name: core.development.execute_goal
    description: "API endpoint to execute a high-level goal."
    status: active
    owner: core
  - name: core.endpoint.execute_goal.request
    description: "Pydantic schema for the /execute_goal endpoint request."
    status: active
    owner: core
  - name: core.errors.register_handlers
    description: "Registers custom exception handlers with the FastAPI application."
    status: active
    owner: core
  - name: core.file_handler.confirm_write
    description: "Confirms and applies a pending write to disk."
    status: active
    owner: core
  - name: core.file_handler.manage
    description: "Central class for safe, auditable file operations."
    status: active
    owner: core
  - name: core.file_handler.stage_write
    description: "Stages a pending write operation for later confirmation."
    status: active
    owner: core
  - name: core.intent.load_source_structure
    description: "Loads and provides a queryable interface to the source code structure."
    status: active
    owner: core
  - name: core.intent.load_structure
    description: "Loads the domain structure from source_structure.yaml."
    status: active
    owner: core
  - name: core.intent.resolve_domain
    description: "Determines which domain a file path belongs to."
    status: active
    owner: core
  - name: core.intent.tokenize
    description: "Converts a string into a list of lowercase alphanumeric tokens."
    status: active
    owner: core
  - name: core.knowledge.load_graph
    description: "Loads or reloads the knowledge graph from disk."
    status: active
    owner: core
  - name: prompt.pipeline.inject_includes
    description: "Replaces [[include:file.py]] directives with file content."
    status: active
    owner: prompt
  - name: prompt.pipeline.replace_include
    description: "Dynamically replaces an [[include:...]] match with file content."
    status: active
    owner: prompt
  - name: governance.domain.permissions_query
    description: "Returns the allowed imports for a given domain."
    status: active
    owner: governance
  - name: governance.review.context
    description: "A data structure holding the context for a governance review."
    status: active
    owner: governance
  - name: governance.risk_gate.evaluate_expression
    description: "Safely evaluates a simple boolean expression from a string."
    status: active
    owner: governance
  - name: intent_guard.check_transaction
    description: "Checks if a proposed set of file changes complies with all active rules."
    status: active
    owner: intent_guard
  - name: intent_guard.policies.load
    description: "Loads rules from all YAML files in the policies directory."
    status: active
    owner: intent_guard
  - name: prompt.analysis.inject
    description: "Replaces [[analysis:file.py]] directives with code analysis."
    status: active
    owner: prompt
  - name: prompt.manifest.inject
    description: "Replaces [[manifest:field]] directives with manifest data."
    status: active
    owner: prompt
  - name: reconnaissance.symbol.find_callers
    description: "Finds all symbols in the graph that call a target symbol."
    status: active
    owner: agent
  - name: system.admin.execute_command
    description: "Executes a core-admin command as a subprocess for the interactive menu."
    status: active
    owner: system
  - name: system.admin.guard.print_drift_summary
    description: "Prints a user-friendly summary of the drift report."
    status: active
    owner: system
  - name: system.admin.launch_interactive_menu
    description: "The main entry point for the interactive TUI menu."
    status: active
    owner: system
  - name: system.admin.report_drift_table
    description: "Prints a formatted table of the drift report."
    status: active
    owner: system
  - name: system.admin.review.register
    description: "Registers the 'review' command group and its subcommands."
    status: active
    owner: system
  - name: system.admin.run_checks
    description: "Runs all checks: lint, test, and a full constitutional audit."
    status: active
    owner: system
  - name: system.admin.show_development_menu
    description: "Displays the AI Development & Self-Healing submenu."
    status: active
    owner: system
  - name: system.admin.show_menu
    description: "Displays the System Health & CI submenu."
    status: active
    owner: system
  - name: system.admin.show_project_lifecycle_menu
    description: "Displays the Project Lifecycle submenu."
    status: active
    owner: system
  - name: system.agent.scaffold_application
    description: "Uses an LLM agent to autonomously scaffold a new application."
    status: active
    owner: system
  - name: system.audit.context
    description: "Shared state container for audit checks."
    status: active
    owner: system
  - name: system.audit.finding
    description: "Represents a single audit finding."
    status: active
    owner: system
  - name: system.audit.log_finding
    description: "Logs an individual audit finding with appropriate severity level."
    status: active
    owner: system
  - name: system.audit.run_constitutional
    description: "Runs the full constitutional self-audit."
    status: active
    owner: system
  - name: system.audit.severity_level
    description: "Severity levels for audit findings."
    status: active
    owner: system
  - name: system.capability.discover
    description: "Unified entrypoint to discover capabilities from all available sources."
    status: active
    owner: system
  - name: system.capability.metadata
    description: "A minimal, shared data container for capability metadata."
    status: active
    owner: system
  - name: system.capability.reconcile
    description: "Performs semantic analysis to reconcile and re-tag capabilities."
    status: active
    owner: system
  - name: system.cli.register
    description: "Registers a command group with the main CLI app."
    status: active
    owner: system
  - name: system.cli.register_agent
    description: "Registers the 'agent' command group."
    status: active
    owner: system
  - name: system.cli.register_byor_commands
    description: "Registers BYOR commands under the admin CLI."
    status: active
    owner: system
  - name: system.cli.register_chat_command
    description: "Registers the 'chat' command."
    status: active
    owner: system
  - name: system.cli.register_guard
    description: "Registers the 'guard' command group."
    status: active
    owner: system
  - name: system.cli.register_key_commands
    description: "Registers key management commands."
    status: active
    owner: system
  - name: system.cli.register_proposals
    description: "Registers the 'proposals' command group."
    status: active
    owner: system
  - name: system.code.format
    description: "Auto-formats all code to be constitutionally compliant."
    status: active
    owner: system
  - name: system.code.lint
    description: "Checks code formatting and quality with Black and Ruff."
    status: active
    owner: system
  - name: system.code.parse_capability_tags
    description: "A simple parser to extract # CAPABILITY tags from code."
    status: active
    owner: system
  - name: system.constitution.propose_amendment
    description: "Creates a formal proposal file for a constitutional amendment."
    status: active
    owner: system
  - name: system.docs.discover_files
    description: "Discovers and returns a list of all documentation files."
    status: active
    owner: system
  - name: system.file.bundle_content
    description: "Generic function to bundle the content of a list of files."
    status: active
    owner: system
  - name: system.file.domain_mapping
    description: "Determines the logical domain for a file path."
    status: active
    owner: system
  - name: system.file.load_json
    description: "Loads and returns a JSON dictionary from a file path."
    status: active
    owner: system
  - name: system.file.read_first
    description: "Finds and reads the first existing file from a list of paths."
    status: active
    owner: system
  - name: system.files.discover
    description: "Yields repository files to be scanned."
    status: active
    owner: system
  - name: system.git.add
    description: "Stages a file or path."
    status: active
    owner: system
  - name: system.git.add_all
    description: "Stages all changes, including untracked files."
    status: active
    owner: system
  - name: system.git.commit
    description: "Commits staged changes with a provided message."
    status: active
    owner: system
  - name: system.git.detect_repository
    description: "Returns True if a .git directory exists."
    status: active
    owner: system
  - name: system.git.execute_command
    description: "Runs a git command and returns stdout."
    status: active
    owner: system
  - name: system.git.status_porcelain
    description: "Returns the porcelain status output of git."
    status: active
    owner: system
  - name: system.guard.discover.capability_metadata
    description: "Extracts capability metadata from a Knowledge Graph node."
    status: active
    owner: system
  - name: system.guard.discover.capabilities_from_kgb
    description: "Uses KnowledgeGraphBuilder to discover capabilities."
    status: active
    owner: system
  - name: system.guard.parse_inline_meta
    description: "Parses inline [key=value] metadata from text."
    status: active
    owner: system
  - name: system.guard.persist_drift_report
    description: "Persists the drift report to disk."
    status: active
    owner: system
  - name: system.guard.report_drift
    description: "Structured result for capability drift."
    status: active
    owner: system
  - name: system.guard.serialize_drift_report
    description: "Converts the drift report into a stable JSON-serializable dict."
    status: active
    owner: system
  - name: system.kgb.discovery.try_import
    description: "Attempts to dynamically import the KnowledgeGraphBuilder."
    status: active
    owner: system
  - name: system.llm.extract_json
    description: "Helper to extract JSON from LLM responses."
    status: active
    owner: system
  - name: system.manifest.extract_ux_defaults
    description: "Extracts and returns UX-related default values from the manifest."
    status: active
    owner: system
  - name: system.manifest.load_capabilities
    description: "Loads, parses, and normalizes capabilities from the project manifest."
    status: active
    owner: system
  - name: system.manifest.load_raw
    description: "Loads and parses a YAML manifest file."
    status: active
    owner: system
  - name: system.manifest.locate
    description: "Locates and returns the path to the project manifest file."
    status: active
    owner: system
  - name: system.manifest.migrate
    description: "Reads the monolithic manifest and splits it into per-domain manifests."
    status: active
    owner: system
  - name: system.poetry.execute_command
    description: "Helper to run a command via Poetry, log it, and handle errors."
    status: active
    owner: system
  - name: system.proposal.approve
    description: "Verifies signatures, runs a canary audit, and applies a valid proposal."
    status: active
    owner: system
  - name: system.proposal.discover_paths
    description: "Returns all cr-* proposal paths."
    status: active
    owner: system
  - name: system.proposal.list_pending
    description: "Lists pending constitutional proposals and displays their status."
    status: active
    owner: system
  - name: system.proposal.load
    description: "Loads a proposal file, preserving its format."
    status: active
    owner: system
  - name: system.proposal.sign
    description: "Signs a proposal with the operator's private key."
    status: active
    owner: system
  - name: system.proposal.summarize
    description: "Provides a summary of pending proposals."
    status: active
    owner: system
  - name: system.proposal.validate_schema
    description: "Validates proposal files against JSON schema."
    status: active
    owner: system
  - name: system.proposal.validate_signature
    description: "Handles signature validation and content drift detection."
    status: active
    owner: system
  - name: system.report.check_clean
    description: "Determines if a drift report is clean."
    status: active
    owner: system
  - name: system.repository.scaffold_constitution
    description: "Analyzes an external repository and scaffolds a minimal constitution."
    status: active
    owner: system
  - name: system.review.orchestrate
    description: "Generic orchestrator for all review commands."
    status: active
    owner: system
  - name: system.test.execute
    description: "Runs the pytest suite."
    status: active
    owner: system
  - name: system.tools.scaffold_base_structure
    description: "Creates the base project structure."
    status: active
    owner: system
  - name: system.yaml.load_file
    description: "Loads YAML for governance operations."
    status: active
    owner: system
  - name: test_execution.log_result
    description: "Appends a JSON record of a test run to the persistent log file."
    status: active
    owner: test
  - name: test_execution.store_failure
    description: "Saves the details of a failed test run to a dedicated file."
    status: active
    owner: test
  - name: test_execution.summarize_results
    description: "Parses pytest output to find the final summary line."
    status: active
    owner: test
  - name: tooling.ast.analyze
    description: "Handles AST parsing and symbol extraction."
    status: active
    owner: tooling
  - name: tooling.ast.analyze_file
    description: "Analyzes a single Python file and extracts all symbols."
    status: active
    owner: tooling
  - name: tooling.ast.analyze_files
    description: "Analyzes multiple files and returns all discovered symbols."
    status: active
    owner: tooling
  - name: tooling.ast.calculate_structural_hash
    description: "Calculates a hash for structural comparison of AST nodes."
    status: active
    owner: tooling
  - name: tooling.ast.context_aware_visit
    description: "A stateful AST visitor that understands nested contexts."
    status: active
    owner: tooling
  - name: tooling.ast.context_management
    description: "Helper to process a symbol and manage the context stack."
    status: active
    owner: tooling
  - name: tooling.ast.detect_docstring
    description: "Detects both standard and non-standard docstrings for a node."
    status: active
    owner: tooling
  - name: tooling.ast.detect_fastapi_app
    description: "Scans an AST tree to find the FastAPI app instance name."
    status: active
    owner: tooling
  - name: tooling.ast.extract_function_parameters
    description: "Extracts parameter names from a function definition."
    status: active
    owner: tooling
  - name: tooling.ast.initialize
    description: "Initializes the ASTAnalyzer."
    status: active
    owner: tooling
  - name: tooling.ast.parse_capability_metadata
    description: "Parses the line preceding a symbol for a capability tag."
    status: active
    owner: tooling
  - name: tooling.ast.process_class_methods
    description: "Processes all methods within a class."
    status: active
    owner: tooling
  - name: tooling.ast.process_node
    description: "Processes a single AST node into a FunctionInfo object."
    status: active
    owner: tooling
  - name: tooling.ast.process_symbol
    description: "Processes individual AST nodes into FunctionInfo objects."
    status: active
    owner: tooling
  - name: tooling.ast.processing_context
    description: "Context information needed for processing AST nodes."
    status: active
    owner: tooling
  - name: tooling.ast.record_calls
    description: "Records function or method calls and recursively visits child nodes."
    status: active
    owner: tooling
  - name: tooling.ast.strip_docstrings
    description: "Recursively removes docstring nodes from an AST tree."
    status: active
    owner: tooling
  - name: tooling.ast.visit_async_function_def
    description: "Processes an async function definition node."
    status: active
    owner: tooling
  - name: tooling.ast.visit_class_definition
    description: "Processes a class definition node."
    status: active
    owner: tooling
  - name: tooling.ast.visit_function_definition
    description: "Processes a function definition node."
    status: active
    owner: tooling
  - name: tooling.change_log.append_entry
    description: "Appends a new, structured entry to the metacode change log."
    status: active
    owner: tooling
  - name: tooling.change_log.load
    description: "Loads the existing change log from disk."
    status: active
    owner: tooling
  - name: tooling.cli.update_entry_points
    description: "Adds newly discovered CLI entry points."
    status: active
    owner: tooling
  - name: tooling.knowledge_graph.build
    description: "CLI entry point to run the knowledge graph builder."
    status: active
    owner: tooling
  - name: tooling.knowledge_graph.build_empty
    description: "Builds the output structure when no files are found."
    status: active
    owner: tooling
  - name: tooling.knowledge_graph.build_output
    description: "Builds the final JSON output structure."
    status: active
    owner: tooling
  - name: tooling.knowledge_graph.project_structure_error
    description: "Custom exception for when the project's root cannot be determined."
    status: active
    owner: tooling
  - name: tooling.config.builder.load
    description: "Centralized configuration for the knowledge graph builder."
    status: active
    owner: tooling
  - name: tooling.config.infer_domains
    description: "Heuristic to guess domains from directory structure."
    status: active
    owner: tooling
  - name: tooling.config.load_domain_map
    description: "Loads domain-to-path mapping from configuration."
    status: active
    owner: tooling
  - name: tooling.config.load_exclude_patterns
    description: "Loads default exclude patterns."
    status: active
    owner: tooling
  - name: tooling.config.load_from_project
    description: "Factory method to load configuration from project files."
    status: active
    owner: tooling
  - name: tooling.config.load_patterns
    description: "Loads entry point detection patterns from configuration."
    status: active
    owner: tooling
  - name: tooling.config.parse_entry_points
    description: "Parses pyproject.toml to find declared CLI entry points."
    status: active
    owner: tooling
  - name: tooling.domain.determine
    description: "Handles domain determination for files and symbols."
    status: active
    owner: tooling
  - name: tooling.entry_point.detect
    description: "Detects various types of entry points."
    status: active
    owner: tooling
  - name: tooling.entry_point.detect_main_calls
    description: "Finds function calls in if __name__ == '__main__' blocks."
    status: active
    owner: tooling
  - name: tooling.entry_point.detect_type
    description: "Identifies decorator or CLI-based entry points for a function."
    status: active
    owner: tooling
  - name: tooling.file_scanner.discover
    description: "Handles file discovery and filtering."
    status: active
    owner: tooling
  - name: tooling.file_scanner.exclude_path
    description: "Determines if a given path should be excluded from scanning."
    status: active
    owner: tooling
  - name: tooling.file_scanner.find_python_files
    description: "Finds all Python files that should be analyzed."
    status: active
    owner: tooling
  - name: tooling.filesystem.find_project_root
    description: "Traverses upward to find the project root."
    status: active
    owner: tooling
  - name: tooling.header.parse
    description: "Parses a file's content into its decorator components."
    status: active
    owner: tooling
  - name: tooling.header.reconstruct
    description: "Reconstructs a file's content from its decorator components."
    status: active
    owner: tooling
  - name: tooling.headers.manage
    description: "A collection of atomic tools for managing file header decorators."
    status: active
    owner: tooling
  - name: tooling.models.function_info
    description: "Data structure holding analyzed information about a symbol."
    status: active
    owner: tooling
  - name: tooling.pattern_matcher.identify_entry_points
    description: "Applies declarative patterns to identify entry points."
    status: active
    owner: tooling
  - name: tooling.pattern_matcher.match_symbol
    description: "Checks if a single symbol matches a set of declarative rules."
    status: active
    owner: tooling
  - name: tooling.scaffold.create_project
    description: "Scaffolds a new CORE-governed application."
    status: active
    owner: tooling
  - name: tooling.scaffold.write_file
    description: "Writes content to a file within a new project's directory."
    status: active
    owner: tooling
  - name: tooling.scaffolder.create_project
    description: "A reusable service for creating new, governed projects."
    status: active
    owner: tooling
  - name: tooling.symbol.generate_intent
    description: "Generates an intent description from a docstring or domain."
    status: active
    owner: tooling
  - name: utils.text.process_lines
    description: "A demo helper function."
    status: active
    owner: shared

  # --- Constitutional Peer Review ---
  - name: export_constitution
    description: "Packages the full .intent/ directory into a single bundle for external analysis."
    status: active
    owner: system
  - name: constitutional_peer_review
    description: "Orchestrates sending the constitutional bundle to an external LLM for critique and suggestions."
    status: active
    owner: system
  - name: agents.deduction_agent.initialize
    description: "Initializes the DeductionAgent by loading its governing policies."
    status: active
    owner: agent
  - name: agents.execution.initialize
    description: "Initializes the ExecutionAgent with its required tools."
    status: active
    owner: agent
  - name: agents.execution_context.initialize
    description: "Initializes the execution context with required services."
    status: active
    owner: agent
  - name: agents.intent_translator.initialize
    description: "Initializes the IntentTranslator agent with the CognitiveService."
    status: active
    owner: agent
  - name: agents.plan_executor.initialize
    description: "Initializes the PlanExecutor with necessary dependencies."
    status: active
    owner: agent
  - name: agents.planner.initialize
    description: "Initializes the PlannerAgent."
    status: active
    owner: agent
  - name: agents.reconnaissance.initialize
    description: "Initializes the ReconnaissanceAgent with the knowledge graph."
    status: active
    owner: agent
  - name: audit.check.capability_coverage
    description: "Ensures all required capabilities are implemented."
    status: active
    owner: audit
  - name: audit.check.capability_definitions
    description: "Ensures all implemented capabilities are valid."
    status: active
    owner: audit
  - name: audit.check.code_style
    description: "Verifies that Python modules adhere to documented style conventions."
    status: active
    owner: audit
  - name: audit.check.codebase_health
    description: "Measures code complexity and atomicity against defined policies."
    status: active
    owner: audit
  - name: audit.check.dead_code
    description: "Detects unreferenced public symbols."
    status: active
    owner: audit
  - name: audit.check.docstrings
    description: "Finds symbols missing docstrings or having generic intents."
    status: active
    owner: audit
  - name: audit.check.domain_integrity
    description: "Checks for domain mismatches and illegal imports."
    status: active
    owner: audit
  - name: audit.check.duplication
    description: "Finds symbols with identical structural hashes, violating `dry_by_design`."
    status: active
    owner: audit
  - name: audit.check.environment
    description: "Verifies that required environment variables specified in runtime_requirements.yaml are set."
    status: active
    owner: audit
  - name: audit.check.environment.initialize
    description: "Initializes the EnvironmentChecks class."
    status: active
    owner: audit
  - name: audit.check.knowledge_graph_schema
    description: "Validates all knowledge graph symbols against the schema."
    status: active
    owner: audit
  - name: audit.check.orphaned_intent_files
    description: "Finds .intent files not referenced in meta.yaml."
    status: active
    owner: audit
  - name: audit.check.project_manifest
    description: "Validates the integrity of project_manifest.yaml."
    status: active
    owner: audit
  - name: audit.check.proposals_drift
    description: "Detects content/signature drift in constitutional proposals."
    status: active
    owner: audit
  - name: audit.check.proposals_list
    description: "Emits a friendly summary of pending proposals."
    status: active
    owner: audit
  - name: audit.check.proposals_schema
    description: "Validates proposal files against the proposal.schema.json."
    status: active
    owner: audit
  - name: audit.check.required_files
    description: "Verifies that all files declared in meta.yaml exist on disk."
    status: active
    owner: audit
  - name: audit.check.secrets
    description: "Scans source code for patterns that look like hardcoded secrets."
    status: active
    owner: audit
  - name: audit.check.style.initialize
    description: "Initializes the StyleChecks class."
    status: active
    owner: audit
  - name: audit.check.syntax
    description: "Validates syntax of all .intent YAML/JSON files."
    status: active
    owner: audit
  - name: config.environment.extra_fields
    description: "Returns extra fields that were loaded from environment variables."
    status: active
    owner: config
  - name: config.settings.load
    description: "Loads and validates configuration from environment variables."
    status: active
    owner: config
  - name: core.cognitive_service.initialize
    description: "Initializes the CognitiveService by loading and parsing the cognitive architecture."
    status: active
    owner: core
  - name: core.file_handler.initialize
    description: "Initializes the FileHandler with the repository root."
    status: active
    owner: core
  - name: core.intent_guard.load_source_manifest
    description: "Loads the list of all known source files from the knowledge graph."
    status: active
    owner: core
  - name: core.intent_model.initialize
    description: "Initializes the IntentModel by loading the source structure definition."
    status: active
    owner: core
  - name: core.llm_client.initialize
    description: "Initializes the LLM client with API credentials and endpoint."
    status: deprecated
    owner: core
    replaced_by: llm.client.initialize
  - name: core.prompt_pipeline.initialize
    description: "Initializes the PromptPipeline with the repository root."
    status: active
    owner: core
  - name: core.validation_policies.initialize
    description: "Initializes the policy validator."
    status: active
    owner: core
  - name: docs.clarity_audit
    description: "Audits the human-readable documentation for conceptual clarity."
    status: active
    owner: docs
  - name: fix.headers
    description: "A unified tool to enforce constitutional header conventions on Python files."
    status: active
    owner: system
  - name: intent_alignment.blocklist.read
    description: "Reads the blocklist file for intent alignment checks."
    status: active
    owner: alignment
  - name: intent_guarding.initialize
    description: "Initializes the IntentGuard with repository path and loads all policies."
    status: active
    owner: system
  - name: knowledge.capability.list
    description: "Returns a sorted list of all unique, declared capabilities."
    status: active
    owner: knowledge
  - name: scaffold_project
    description: "Uses an LLM to plan and generate a new, multi-file application."
    status: active
    owner: system
  - name: shared.ast.calculate_structural_hash
    description: "Calculates a structural hash for an AST node."
    status: active
    owner: shared
  - name: shared.ast.function_call_visitor.initialize
    description: "Initializes the FunctionCallVisitor."
    status: active
    owner: shared
  - name: shared.ast.parse_metadata_comment
    description: "Parses metadata comments above a node (e.g., # CAPABILITY:)."
    status: active
    owner: shared
  - name: system.admin.register_fixer_commands
    description: "Registers fixer commands under the admin CLI."
    status: active
    owner: system
  - name: system.admin.register_migration_commands
    description: "Registers migration commands under the admin CLI."
    status: active
    owner: system
  - name: system.agent.infer_from_path
    description: "Infers the most likely responsible agent based on keywords in the file path."
    status: active
    owner: system
  - name: system.audit.executor.initialize
    description: "Initializes the audit executor."
    status: active
    owner: system
  - name: system.governance.audit_context.initialize
    description: "Initializes the AuditorContext with repository paths and configurations."
    status: active
    owner: system
  - name: system.governance.auditor.initialize
    description: "Initializes the ConstitutionalAuditor."
    status: active
    owner: system
  - name: system.governance.check.instantiate
    description: "Instantiates a check class with appropriate dependencies."
    status: active
    owner: system
  - name: system.governance.check.structure.initialize
    description: "Initializes the StructureChecks class."
    status: active
    owner: system
  - name: system.governance.check_discovery.initialize
    description: "Initializes the check discovery system."
    status: active
    owner: system
  - name: system.governance.checks.initialize
    description: "Initializes a check class with a shared auditor context."
    status: active
    owner: system
  - name: system.governance.discover_checks
    description: "Discovers and instantiates constitutional audit checks."
    status: active
    owner: system
  - name: system.governance.discover_known_files
    description: "Builds a set of known intent files from meta.yaml."
    status: active
    owner: system
  - name: system.governance.execute_audit
    description: "Handles the execution of constitutional audit checks."
    status: deprecated
    owner: system
    replaced_by: audit.execute.full
  - name: system.governance.quality_checks.initialize
    description: "Initializes the QualityChecks class."
    status: active
    owner: system
  - name: system.governance.security_checks.initialize
    description: "Initializes the SecurityChecks class."
    status: active
    owner: system
  - name: system.governance.show_menu
    description: "Displays the Constitutional Governance submenu in the interactive shell."
    status: active
    owner: system
  - name: system.governance.summarize_proposals
    description: "Initializes the ProposalSummarizer."
    status: active
    owner: system
  - name: system.health_check.initialize
    description: "Initializes the HealthChecks class."
    status: active
    owner: system
  - name: system.proposal.initialize_dependencies
    description: "Initializes proposal-related dependencies for dependency injection."
    status: active
    owner: system
  - name: system.proposal.loader.initialize
    description: "Initializes the ProposalLoader."
    status: active
    owner: system
  - name: system.proposal.validator.initialize
    description: "Initializes the ProposalValidator."
    status: active
    owner: system
  - name: tooling.ast.collect_function_calls
    description: "An AST visitor that collects the names of all functions being called."
    status: active
    owner: tooling
  - name: tooling.ast.extract_base_classes
    description: "Extracts base class names from a class definition."
    status: active
    owner: tooling
  - name: tooling.ast_visitor.initialize
    description: "Initializes the ContextAwareVisitor."
    status: active
    owner: tooling
  - name: tooling.knowledge_graph_builder.initialize
    description: "Initializes the KnowledgeGraphBuilder with configuration and dependencies."
    status: active
    owner: tooling
  - name: tooling.domain_mapper.initialize
    description: "Initializes the DomainMapper with the builder configuration."
    status: active
    owner: tooling
  - name: tooling.entry_point_detector.initialize
    description: "Initializes the EntryPointDetector with the builder configuration."
    status: active
    owner: tooling
  - name: tooling.file_scanner.initialize
    description: "Initializes the FileScanner with the builder configuration."
    status: active
    owner: tooling
  - name: tooling.pattern_matcher.initialize
    description: "Initializes the PatternMatcher with a set of rules."
    status: active
    owner: tooling
  - name: tooling.scaffolder.initialize
    description: "Initializes the Scaffolder with project name and profile."
    status: active
    owner: tooling
  - name: validation.policy.enforce
    description: "Handles policy-aware validation including safety checks and forbidden patterns."
    status: active
    owner: validation
  - name: validation.policy.load_safety
    description: "Loads and caches the safety policies from the .intent directory."
    status: active
    owner: validation
  - name: validation.yaml.validate_schema
    description: "Validates a YAML file against a JSON Schema."
    status: active
    owner: validation
  - name: audit.execute.checks
    description: "Executes a list of discovered audit checks and collects findings."
    status: active
    owner: audit
  - name: governance.cli.archive_plan
    description: "Persists a rollback plan snapshot for approved proposals."
    status: active
    owner: governance
  - name: governance.cli.generate_token
    description: "Produces a deterministic token for signing a proposal's intent."
    status: active
    owner: governance
  - name: governance.cli.load_key
    description: "Loads an operator's private key from the secure key store."
    status: active
    owner: governance
  - name: governance.cli.load_yaml
    description: "A specialized YAML loader for governance CLI operations."
    status: active
    owner: governance
  - name: governance.cli.run_constitutional_audit
    description: "CLI entry point for running the full constitutional audit."
    status: active
    owner: governance
  - name: governance.cli.save_yaml
    description: "A specialized YAML saver that ensures canonical output for governance operations."
    status: active
    owner: governance
  - name: governance.cli.should_fail
    description: "Determines if a CLI command should exit with an error based on a report."
    status: active
    owner: governance
  - name: planning.execution.create
    description: "Creates an execution plan from a high-level user goal."
    status: active
    owner: agent
  - name: prompt.pipeline.replace_context
    description: "Dynamically replaces a [[context:...]] directive with file content."
    status: active
    owner: prompt
  - name: system.proposal.canonicalize
    description: "Creates a stable, canonical representation of a proposal's content for signing."
    status: active
    owner: system
  - name: audit.check.code_quality
    description: "Runs a pipeline of quality checks (e.g., formatting, linting)."
    status: active
    owner: validation
  - name: system.capability.discovery
    description: "Unified entrypoint to discover capabilities from all available sources."
    status: active
    owner: system