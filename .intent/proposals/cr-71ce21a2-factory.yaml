action: replace_file
content: "```python\nfrom typing import Dict, Type\nfrom src.core.clients.cognitive_service\
  \ import CognitiveService\nfrom src.core.clients.base_client import BaseClient\n\
  from src.core.config import settings\n\n\nclass ClientFactory:\n    \"\"\"Factory\
  \ for creating client instances based on configuration.\"\"\"\n    \n    _client_registry:\
  \ Dict[str, Type[BaseClient]] = {}\n    \n    @classmethod\n    def register_client(cls,\
  \ client_type: str, client_class: Type[BaseClient]):\n        \"\"\"Register a client\
  \ class for a specific client type.\"\"\"\n        cls._client_registry[client_type]\
  \ = client_class\n    \n    @classmethod\n    def create_client(cls, client_type:\
  \ str = None, **kwargs) -> BaseClient:\n        \"\"\"\n        Create a client\
  \ instance based on the configured client type.\n        \n        Args:\n     \
  \       client_type: The type of client to create. If None, uses default from settings.\n\
  \            **kwargs: Additional arguments to pass to the client constructor.\n\
  \            \n        Returns:\n            An instance of the configured client.\n\
  \            \n        Raises:\n            ValueError: If the client type is not\
  \ registered.\n        \"\"\"\n        if client_type is None:\n            client_type\
  \ = settings.LLM_CLIENT_TYPE\n        \n        if client_type not in cls._client_registry:\n\
  \            raise ValueError(f\"Unknown client type: {client_type}. \"\n      \
  \                     f\"Registered types: {list(cls._client_registry.keys())}\"\
  )\n        \n        client_class = cls._client_registry[client_type]\n        return\
  \ client_class(**kwargs)\n\n\n# Register the CognitiveService as the default client\n\
  ClientFactory.register_client(\"cognitive_service\", CognitiveService)\nClientFactory.register_client(\"\
  default\", CognitiveService)\n```"
justification: Update factory methods and dependency injection configurations to create
  CognitiveService instances instead of BaseLLMClient
target_path: src/core/factory.py
