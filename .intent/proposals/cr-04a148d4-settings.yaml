action: replace_file
content: "\"\"\"Django settings for the project.\"\"\"\n\nfrom pathlib import Path\n\
  from typing import Any, Dict, List, Optional\n\nfrom pydantic import Field\nfrom\
  \ pydantic_settings import BaseSettings, SettingsConfigDict\n\n\nclass Settings(BaseSettings):\n\
  \    \"\"\"Application settings.\"\"\"\n\n    model_config = SettingsConfigDict(\n\
  \        env_file=\".env\",\n        env_file_encoding=\"utf-8\",\n        case_sensitive=False,\n\
  \        extra=\"ignore\",\n    )\n\n    # Project\n    PROJECT_NAME: str = \"AI\
  \ Application\"\n    DEBUG: bool = False\n    SECRET_KEY: str = Field(default=\"\
  django-insecure-change-in-production\")\n\n    # Database\n    DATABASE_URL: str\
  \ = Field(default=\"sqlite:///db.sqlite3\")\n\n    # CORS\n    CORS_ALLOWED_ORIGINS:\
  \ List[str] = Field(default_factory=list)\n    ALLOWED_HOSTS: List[str] = Field(default_factory=lambda:\
  \ [\"localhost\", \"127.0.0.1\"])\n\n    # Azure Cognitive Services\n    AZURE_OPENAI_ENDPOINT:\
  \ Optional[str] = None\n    AZURE_OPENAI_API_KEY: Optional[str] = None\n    AZURE_OPENAI_API_VERSION:\
  \ str = \"2024-02-01\"\n    AZURE_OPENAI_DEPLOYMENT_NAME: Optional[str] = None\n\
  \n    # Other LLM providers (kept for compatibility, but CognitiveService should\
  \ be used)\n    OPENAI_API_KEY: Optional[str] = None\n    ANTHROPIC_API_KEY: Optional[str]\
  \ = None\n\n    # Logging\n    LOG_LEVEL: str = \"INFO\"\n\n    @property\n    def\
  \ database_config(self) -> Dict[str, Any]:\n        \"\"\"Get database configuration.\"\
  \"\"\n        if self.DATABASE_URL.startswith(\"sqlite\"):\n            return {\n\
  \                \"ENGINE\": \"django.db.backends.sqlite3\",\n                \"\
  NAME\": self.DATABASE_URL.split(\"///\")[-1],\n            }\n        # Add other\
  \ database configurations as needed\n        return {}\n\n\n# Global settings instance\n\
  settings = Settings()"
justification: Update any configuration references from BaseLLMClient to CognitiveService
  to ensure proper service initialization
target_path: config/settings.py
