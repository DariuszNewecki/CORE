{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://core.local/schemas/proposal.schema.json",
  "title": "CORE Proposal (v1)",
  "type": "object",
  "additionalProperties": false,
  "required": ["target_path", "action", "justification", "content"],
  "properties": {
    "target_path": {
      "type": "string",
      "description": "Repo-relative path to the Mind file to be replaced. Must live under .intent/, but not under .intent/proposals/.",
      "pattern": "^\\.intent\\/(?!proposals\\/)[\\w\\-\\.\\/]+$",
      "$comment": "Forward slashes only; prevents writing directly into .intent/proposals/."
    },
    "action": {
      "type": "string",
      "enum": ["replace_file"],
      "description": "Currently only full file replacement is supported."
    },
    "justification": {
      "type": "string",
      "minLength": 10,
      "description": "Human-readable rationale for the change.",
      "pattern": "\\S",
      "$comment": "Reject all-whitespace strings."
    },
    "content": {
      "type": "string",
      "minLength": 1,
      "description": "The full proposed content of the target file."
    },
    "rollback_plan": {
      "type": "object",
      "additionalProperties": false,
      "required": ["description"],
      "properties": {
        "description": { "type": "string", "minLength": 3 },
        "previous_version_hint": { "type": "string" }
      }
    },
    "metadata": {
      "type": "object",
      "additionalProperties": false,
      "description": "Optional authoring metadata (not used for security decisions).",
      "properties": {
        "created_by": { "type": "string", "format": "email" },
        "created_at": { "type": "string", "format": "date-time" },
        "content_mime": {
          "type": "string",
          "enum": ["application/yaml", "application/json", "text/markdown", "text/plain"]
        }
      }
    },
    "content_sha256": {
      "$ref": "#/$defs/sha256",
      "description": "Optional helper: precomputed SHA-256 of `content` for audit tooling."
    },
    "labels": {
      "type": "array",
      "items": { "type": "string", "minLength": 1, "maxLength": 64 },
      "maxItems": 16,
      "uniqueItems": true,
      "description": "Optional tags for filtering/search (e.g., ['governance','policy'])."
    },
    "signatures": {
      "type": "array",
      "description": "Optional array of signature objects. Quorum is enforced outside the schema.",
      "items": { "$ref": "#/$defs/signature" }
    }
  },
  "$defs": {
    "sha256": {
      "type": "string",
      "pattern": "^[a-f0-9]{64}$",
      "$comment": "Lowercase hex digest."
    },
    "base64": {
      "type": "string",
      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
      "$comment": "RFC 4648 base64 without newlines."
    },
    "signature": {
      "type": "object",
      "additionalProperties": false,
      "required": ["identity", "signature_b64", "token", "timestamp"],
      "properties": {
        "identity": {
          "type": "string",
          "description": "Human identity for the signer (email preferred)."
        },
        "signature_b64": {
          "$ref": "#/$defs/base64",
          "description": "Ed25519 signature, base64-encoded."
        },
        "token": {
          "type": "string",
          "pattern": "^core-proposal-v1:[a-f0-9]{64}$",
          "description": "Approval token over proposal content. Must match admin CLI format."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "RFC 3339 timestamp when the signature was created."
        }
      }
    }
  },
  "examples": [
    {
      "target_path": ".intent/policies/safety_policies.yaml",
      "action": "replace_file",
      "justification": "Align policy wording with clarity_first; no behavior change.",
      "content": "# new YAML here",
      "metadata": {
        "created_by": "alice@example.com",
        "created_at": "2025-08-08T12:34:56Z",
        "content_mime": "application/yaml"
      },
      "labels": ["governance", "policy"]
    }
  ]
}
