name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "poetry"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.3"

      - name: Configure Poetry (local venv)
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      # IMPORTANT: install the project itself so entry points (like `core-admin`) are created.
      - name: Install dependencies (project + dev)
        run: poetry install --no-interaction

      - name: Static checks (Ruff + Black)
        run: |
          poetry run ruff check .
          poetry run black --check .

      - name: Tests (pytest + coverage)
        run: poetry run pytest -q --cov=src --cov-report=xml

      - name: Export knowledge graph
        run: poetry run core-admin guard kg-export

      - name: Upload artifacts (coverage & KG)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: core-reports
          path: |
            coverage.xml
            reports/knowledge_graph.json
